function Check-Hash {
    param (
        [string]$Path  = "$env:ProgramFiles\BasicAV\Definitions\Scan_Results\Results\"
    )

    # Get all files in the specified directory
    $files = Get-ChildItem -Path $Path -File

    # Check if there are files in the directory
    if ($files.Count -eq 0) {
        Write-Host "Empty directory: $Path"
        exit
    } else {
        # Select the newest file
        $newestFile = $files | Sort-Object LastWriteTime -Descending | Select-Object -First 1
        Write-Host "Newest file: $($newestFile.FullName)"
    }

    # Read the content of the newest file as JSON
    try {
        $allHash = Get-Content -Path $newestFile.FullName | ConvertFrom-Json
    } catch {
        Write-Host "An error occurred while reading the file: $_"
        exit
    }

    # Check if $allHash is an array
    if (-not ($allHash -is [array])) {
        Write-Host "The content of the file is not an array of hashes. Please ensure that the JSON format is correct."
        exit
    }

    # Total count of hashes to process
    $filesCount = $allHash.Count
    $total = 0

    foreach ($hash in $allHash) {
        if (-not $hash.PSObject.Properties.Match("Hash")) {
            Write-Host "The hash object does not contain a 'Hash' property. Object: $($hash | ConvertTo-Json)"
            continue
        }

        # Define the API URL
        $url = "https://mb-api.abuse.ch/api/v1/"
        
        # Define the data to be sent
        $body = @{
            query = "get_info"
            hash  = $hash.Hash
        }

        # Execute the POST request
        try {
            $response = Invoke-RestMethod -Uri $url -Method Post -Body $body
            # Display the response
            Write-Host "Hash: $($hash.Hash) - Response: $($response | ConvertTo-Json -Depth 5)"
        } catch {
            Write-Host "An error occurred while querying the API for hash: $($hash.Hash) - Error: $_"
        }

        # Increment the total processed hashes
        $total++

        # Update progress
        Write-Progress -Activity "Check Hash" -Status "Hash $total/$filesCount Checked" -PercentComplete (($total / $filesCount) * 100)
    }
}


# SIG # Begin signature block
# MIIFjQYJKoZIhvcNAQcCoIIFfjCCBXoCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQU/9KAwFgjr4Kr8jU9e+r/TqIH
# +zigggMnMIIDIzCCAgugAwIBAgIQejcWDk/lGK5MdcpcyZxgBjANBgkqhkiG9w0B
# AQUFADAbMRkwFwYDVQQDDBBMYXp5U2NyaXB0VHVydGxlMB4XDTI0MTAzMTA5MjQx
# M1oXDTM0MTAzMTA5MzQxM1owGzEZMBcGA1UEAwwQTGF6eVNjcmlwdFR1cnRsZTCC
# ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJz6d43WDjnR+UHWBVK990vf
# Up1YotDErRDEsL07VFlLf/P/iljrZDOesqRFadcK87fmrFBsHQge1bqQPYie/BRn
# CtmuqgUBRK5eIlhLYQBmjncuCHL/qcASzgrT9WmivEyJD5Yt3PeISJOOWWYOU8bj
# xCWbHeeTwvGXFTFYfD9+T1p3dPsJ+d1xkVxnQe7JECjE3IPbycLZhxnJxNH2DpVH
# GAeN8KGG+KcxuJtnzpwA2O3kQIbFZsl4fGZ9uOBPqFhu4g29jtLEk3b1byBkDOcA
# dkB4i5fHrVnSs6trsnG5H/5NrVYvj7tMdCeJnwzLB4w7yxCaR4UYRdq6MVKQ4v0C
# AwEAAaNjMGEwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMBsG
# A1UdEQQUMBKCEExhenlTY3JpcHRUdXJ0bGUwHQYDVR0OBBYEFABN6yQfpg4TB5Mw
# 5+vLgebC9tGvMA0GCSqGSIb3DQEBBQUAA4IBAQAePqOzciA9Bi5vBjEXxdmJkWHs
# A/PZuaD7esJh5c7MVW15QUKGIy7OsdD2pXpkhSsHNUO/n7If8VRyChSfzs/owwZY
# WvJyxWHtGUDi+zY6Tk4QvePO2vlA7UTprygQAozcsN/PWZ1oQWnoMWSmHB5iQkvF
# bj1abLLD++x8RJWjFbIw6s9vNEQcO/IlgPGWBct4gtPdPEYYfNM0igBDl6ZGz2yz
# OCmehnF/Hk28DlaW7OK4TRJTgXt40wEfWrZUWO6Z839HcdQ/C+P5dJ2Ts6PZ09B3
# Gl0qm2icfLP2vZtGJkg1Uh3k1RZ+X7ETSN+XFq8VCQtOOodKxPBLp7tNYQe0MYIB
# 0DCCAcwCAQEwLzAbMRkwFwYDVQQDDBBMYXp5U2NyaXB0VHVydGxlAhB6NxYOT+UY
# rkx1ylzJnGAGMAkGBSsOAwIaBQCgeDAYBgorBgEEAYI3AgEMMQowCKACgAChAoAA
# MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgor
# BgEEAYI3AgEVMCMGCSqGSIb3DQEJBDEWBBSoCUHL12wYeZDTntc/8lJwyEMBbTAN
# BgkqhkiG9w0BAQEFAASCAQBGJ73Gu0Z5ONcmSDOMIVnp4HbOrv5cTdBRSJ7eBQw6
# h5R/OTjlk3i1Qky2IEHfwzjkuUFIPZ4JRubKo/FTFLi+4tKNjITVXVvzb4wPfBeY
# QDx9BZllN8aDo942jp8rEu1oTkRHgqi9BCWs9pFyCyttHj/lLH29tF1+w8T4ELaL
# sEp4WVq2+Cihj+0mGJsMeywyDkecGqQzKrjMmUrFAJlmxiik7mhdlW3B/KsdTwIT
# XtyZUp8zhlwezWDOJI++DVNiqe17MaytQBkwYctfIVqTyyQKHyRRIszatUzpf+m6
# mc/y3x0/RoMomXBmdjvbwdmTnuUsXN5HbVYN/3z2L+nf
# SIG # End signature block
